package dao.pharmacy;

import domainModel.pharmacy.Order;
import domainModel.pharmacy.Stock;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.support.DatabaseMetaDataCallback;
import org.springframework.jdbc.support.JdbcUtils;
import org.springframework.jdbc.support.MetaDataAccessException;
import org.springframework.jdbc.support.rowset.SqlRowSet;
import org.springframework.jdbc.support.rowset.SqlRowSetMetaData;

import java.sql.DatabaseMetaData;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

/**
 * Created by Fang on 2/10/2016.
 */
public class PharmacyDAOImpl implements PharmacyDAO {
    @Autowired
    private JdbcTemplate jdbcTemplate;



    @Override
    public List<Order> getAllOrdersData(String wherePart, String orderByPart, String rowNumPart) {
        //System.out.println("demo data dao called........");
        List<Order> list = new ArrayList<Order>();

        String sql2="select * from ( "
                + "select o.*,  @rownum:=@rownum+1 as rownum from orders o , (SELECT @rownum:=0) r where 1=1 "+
                wherePart+" "+orderByPart+ " ) x "+rowNumPart;
        try{
            SqlRowSet rs = jdbcTemplate.queryForRowSet(sql2);

            Order order;
            while(rs.next()){
                order = new Order();
                order.setId(rs.getString("id"));
                order.setOrder_id(rs.getString("order_id"));
                order.setDoc_id(rs.getString("doc_id"));
                order.setPat_id(rs.getString("pat_id"));
                order.setPhar_id(rs.getString("phar_id"));
                order.setOrder_time(rs.getString("order_time"));
                order.setPick_time(rs.getString("pick_time"));
                order.setStatus(rs.getString("status"));
                list.add(order);
            }
        }catch (Exception e) {
            e.printStackTrace();
        }

        return list;
    }



    @Override
    public int getOrdersCount(String wherePart){
        //System.out.println("demo data count dao called........");
        int count=0;
        String sql= "select count(*) totalCount from orders o where 1=1 "+wherePart;
        try{
            count = jdbcTemplate.queryForInt(sql);
        }catch(Exception e){
            e.printStackTrace();
        }
        return count;
    }

    @Override
    public int getStocksCount(String wherePart, String phar_id) {
        //System.out.println("demo data count dao called........");
        int count=0;
        String sql= "select count(*) totalCount from stocks s where s.phar_id=" + phar_id + " "+wherePart;
        try{
            count = jdbcTemplate.queryForInt(sql);
        }catch(Exception e){
            e.printStackTrace();
        }
        return count;
    }

    @Override
    public List<Stock> getAllStocksData(String wherePart, String orderByPart, String rowNumPart, String phar_id) {
        //System.out.println("demo data dao called........");
        List<Stock> list = new ArrayList<Stock>();

        String sql2="select * from ( "
                + "select d.name,d.producer,s.stock, @rownum:=@rownum+1 as rownum from stocks s left join drugs d on " +
                "s.drug_id = d.id, (SELECT @rownum:=0) r where s.phar_id =" + phar_id + " "+
                wherePart+" "+orderByPart+ " ) x "+rowNumPart;
        try{
            SqlRowSet rs = jdbcTemplate.queryForRowSet(sql2);

            Stock stock;
            while(rs.next()){
                stock = new Stock();
                stock.setName(rs.getString("name"));
                stock.setProducer(rs.getString("producer"));
                stock.setStock(rs.getString("stock"));

                list.add(stock);
            }
        }catch (Exception e) {
            e.printStackTrace();
        }

        return list;
    }

}
